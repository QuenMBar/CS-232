Script started on Sat 09 Mar 2019 11:29:05 PM EST
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2$ cat clean.sh 
#!/bin/bash

# clean.sh is a shell script that looks though a specified directory and its subdirectories to
# remove any "extraneous" files that are in the directories.  As it goes through it will print each file
# it removes depending on if the user added a quiet switch to the command.  If the user added the interactive
# switch, it will ask the user if they want to remove the file and if the user replies with a "y" then it will remove it.
# 
# Recieves: Can take a direcotory path, quiet swithc, and interactive switch
# 
# Written by: Quentin Barnes for CS 232
# Date: March 9, 2019



# cleanDirectory() is a fucntion that, given directory path and if it should be quiet or interactive, removes 
# "extraneous" files from the directory and its subdirectories.  
# 
# Revices: string: Directroy path, boolean: Interactive switch, boolean: Quiet switch
# 
cleanDirectory()
{	
	cd $1 																					# Moves to the specified directory
  	for file in *;do 																		# For loop trhough ever file in directory
		if [ $file = "core" ]																# Checks if the file is a "core" file
		then
			if [ "$3" = true ]																# If it shouldnt be quiet, print the file name
			then
				echo $file
			fi

			if [ "$2" = true ]																# If it shouldnt be interacive, remove the file 
			then																			# or prompt user for input and if "y" remove file
				rm $file
			else
				echo "Do you want to remove " $file "? Reply \"y\" for yes."
				read respone
				if [ -n "$respone" ]
				then
					if [ $respone = "y" ]
					then 
						rm $file
					fi
				fi
			fi
		fi
		if [[ (${file: -1} = "#") && (${file:0:1} = "#") ]]									# Checks if the file starts and ends with #
		then
			if [ "$3" = true ]																# If it shouldnt be quiet, print the file name
			then
				echo $file
			fi

			if [ "$2" = true ]																# If it shouldnt be interacive, remove the file 
			then																			# or prompt user for input and if "y" remove file
				rm $file
			else
				echo "Do you want to remove " $file "? Reply \"y\" for yes."
				read respone
				if [ -n "$respone" ]
				then
					if [ $respone = "y" ]
					then 
						rm $file
					fi
				fi
			fi
		fi
		if [ ${file: -1} = "~" ]															# Checks if the file ends with ~
		then
			if [ "$3" = true ]																# If it shouldnt be quiet, print the file name
			then
				echo $file
			fi

			if [ "$2" = true ]																# If it shouldnt be interacive, remove the file 
			then																			# or prompt user for input and if "y" remove file
				rm $file
			else
				echo "Do you want to remove " $file "? Reply \"y\" for yes."
				read respone
				if [ -n "$respone" ]
				then
					if [ $respone = "y" ]
					then 
						rm $file
					fi
				fi
			fi
		fi
		if [ ${file: -2} = ".o" ]															# Checks if the file ends with ".o"
		then
			if [ "$3" = true ]																# If it shouldnt be quiet, print the file name
			then
				echo $file
			fi

			if [ "$2" = true ]																# If it shouldnt be interacive, remove the file 
			then																			# or prompt user for input and if "y" remove file
				rm $file
			else
				echo "Do you want to remove " $file "? Reply \"y\" for yes."
				read respone
				if [ -n "$respone" ]
				then
					if [ $respone = "y" ]
					then 
						rm $file
					fi
				fi
			fi
		fi
		if [[ (-x $file) && (! -d $file) ]]													# Checks if the file is an executable
		then
			if [ "$3" = true ]																# If it shouldnt be quiet, print the file name
			then
				echo $file
			fi

			if [ "$2" = true ]																# If it shouldnt be interacive, remove the file 
			then																			# or prompt user for input and if "y" remove file
				rm $file
			else
				echo "Do you want to remove " $file "? Reply \"y\" for yes."
				read respone
				if [ -n "$respone" ]
				then
					if [ $respone = "y" ]
					then 
						rm $file
					fi
				fi
			fi
		fi
		if [ -d $file ]																		# Checks if the file is an executable
		then 
			if [ "$3" = true ]																# If it shouldnt be quiet, print that its changing directory
			then
				echo "MOVING TO DIRECTORY: " $file
			fi
			cleanDirectory $file $2 $3														# Calls the cleanDirectory for the sub-directory
			cd ..																			# Returns to previous direcotry after sub-directory is clean
		fi
	done
}



# Main
# Takes the command line arguments and uses them to call cleanDirectory() with the propper arguments
# 
# Can take a direcotory path, quiet swithc, and interactive switch
# 
if [ $# -gt 0 ]																				# If there is command line arguments then parse them
then
	autoDel=true
	notQuiet=true
	default="."
	for i in $@; do 																		# For every command line argument entered
		echo "Arguments supplied: $i" 
		if [[ ($i = "-i") || ($i = "--interactive") ]]										# If its the interactive switch, 
		then 
			autoDel=false 																	# then set the interact variable to false
		elif [[ ($i = "-q") || ($i = "--quiet") ]]											# If its the quiet switch, 
		then 
			notQuiet=false																	# then set the quiet variable to false
		else
			default=$i 																		# else set the path to the switch
		fi
	done
	cleanDirectory $default $autoDel $notQuiet												# call cleanDirectory() with inputed values
else																						# else call cleanDirectory() with default values
	echo "No arguments supplied"
	cleanDirectory . true true
fi

echo "DONE"																					# Tells the user that the program is finishedqmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2$ cp -r /home/cs/232/projects/2/2 019 .
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2$ cd 2019/
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2/2019$ du
32	./partC/goodbye
272	./partC/coreTest
4	./partC/.secret/S2
272	./partC/.secret/testCore
32	./partC/.secret/S3/S3a/goodbye
64	./partC/.secret/S3/S3a
52	./partC/.secret/S3/S3b
136	./partC/.secret/S3/S3c
256	./partC/.secret/S3
52	./partC/.secret/S1/S1b
136	./partC/.secret/S1/S1c
32	./partC/.secret/S1/S1a/goodbye
64	./partC/.secret/S1/S1a
256	./partC/.secret/S1
792	./partC/.secret
1128	./partC
4	./partB/B2
136	./partB/B1/B1c
32	./partB/B1/B1a/goodbye
64	./partB/B1/B1a
52	./partB/B1/B1b
256	./partB/B1
52	./partB/B3/B3b
136	./partB/B3/B3c
32	./partB/B3/B3a/goodbye
64	./partB/B3/B3a
256	./partB/B3
520	./partB
32	./partA/goodbye
272	./partA/coreTest
336	./partA
1988	.
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2/2019$ cd ..
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2$ ./clean.sh 2019/partA
Arguments supplied: 2019/partA
MOVING TO DIRECTORY:  coreTest
core
coreTest
MOVING TO DIRECTORY:  goodbye
goodbye
#goodbye.c#
goodbye.c~
hello
#hello.c#
hello.c~
DONE
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2$ cd 2019/
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2/2019$ du
32	./partC/goodbye
272	./partC/coreTest
4	./partC/.secret/S2
272	./partC/.secret/testCore
32	./partC/.secret/S3/S3a/goodbye
64	./partC/.secret/S3/S3a
52	./partC/.secret/S3/S3b
136	./partC/.secret/S3/S3c
256	./partC/.secret/S3
52	./partC/.secret/S1/S1b
136	./partC/.secret/S1/S1c
32	./partC/.secret/S1/S1a/goodbye
64	./partC/.secret/S1/S1a
256	./partC/.secret/S1
792	./partC/.secret
1128	./partC
4	./partB/B2
136	./partB/B1/B1c
32	./partB/B1/B1a/goodbye
64	./partB/B1/B1a
52	./partB/B1/B1b
256	./partB/B1
52	./partB/B3/B3b
136	./partB/B3/B3c
32	./partB/B3/B3a/goodbye
64	./partB/B3/B3a
256	./partB/B3
520	./partB
12	./partA/goodbye
12	./partA/coreTest
36	./partA
1688	.
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2/2019$ cd ..
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2$ ./clean.sh 
No arguments supplied
MOVING TO DIRECTORY:  2019
MOVING TO DIRECTORY:  partA
MOVING TO DIRECTORY:  coreTest
MOVING TO DIRECTORY:  goodbye
MOVING TO DIRECTORY:  partB
MOVING TO DIRECTORY:  B1
MOVING TO DIRECTORY:  B1a
MOVING TO DIRECTORY:  goodbye
goodbye
#goodbye.c#
goodbye.c~
hello
#hello.c#
hello.c~
MOVING TO DIRECTORY:  B1b
goodbye
#goodbye.c#
goodbye.c~
#hay.c#
hay.c~
#hey.c#
hey.c~
MOVING TO DIRECTORY:  B1c
goodbye
#goodbye.c#
goodbye.c~
hay
#hay.c#
hay.c~
#hay.h#
hay.h~
hay.o
hey
#hey.c#
hey.c~
#hey.h#
hey.h~
hey.o
main
#main.c#
main.c~
main.o
MOVING TO DIRECTORY:  B2
./clean.sh: line 90: [: =: unary operator expected
MOVING TO DIRECTORY:  B3
MOVING TO DIRECTORY:  B3a
MOVING TO DIRECTORY:  goodbye
goodbye
#goodbye.c#
goodbye.c~
hello
#hello.c#
hello.c~
MOVING TO DIRECTORY:  B3b
goodbye
#goodbye.c#
goodbye.c~
#hay.c#
hay.c~
#hey.c#
hey.c~
MOVING TO DIRECTORY:  B3c
goodbye
#goodbye.c#
goodbye.c~
hay
#hay.c#
hay.c~
#hay.h#
hay.h~
hay.o
hey
#hey.c#
hey.c~
#hey.h#
hey.h~
hey.o
main
#main.c#
main.c~
main.o
MOVING TO DIRECTORY:  partC
MOVING TO DIRECTORY:  coreTest
core
coreTest
MOVING TO DIRECTORY:  goodbye
goodbye
#goodbye.c#
goodbye.c~
hello
#hello.c#
hello.c~
clean.sh
DONE
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2$ cd 2019/
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2/2019$ du
12	./partC/goodbye
12	./partC/coreTest
4	./partC/.secret/S2
272	./partC/.secret/testCore
32	./partC/.secret/S3/S3a/goodbye
64	./partC/.secret/S3/S3a
52	./partC/.secret/S3/S3b
136	./partC/.secret/S3/S3c
256	./partC/.secret/S3
52	./partC/.secret/S1/S1b
136	./partC/.secret/S1/S1c
32	./partC/.secret/S1/S1a/goodbye
64	./partC/.secret/S1/S1a
256	./partC/.secret/S1
792	./partC/.secret
828	./partC
4	./partB/B2
28	./partB/B1/B1c
12	./partB/B1/B1a/goodbye
24	./partB/B1/B1a
16	./partB/B1/B1b
72	./partB/B1
16	./partB/B3/B3b
28	./partB/B3/B3c
12	./partB/B3/B3a/goodbye
24	./partB/B3/B3a
72	./partB/B3
152	./partB
12	./partA/goodbye
12	./partA/coreTest
36	./partA
1020	.
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2/2019$ cd ..
qmb2@gold05:~/Desktop/GitStuff/CS-232/Project 2$ exit

Script done on Sat 09 Mar 2019 11:31:48 PM EST
